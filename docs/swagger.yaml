definitions:
  model.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  model.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  model.User:
    properties:
      avatar_url:
        type: string
      createdAt:
        type: string
      email:
        type: string
      gender:
        type: integer
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      status:
        type: integer
      updatedAt:
        type: string
      username:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.LoginResponse'
              type: object
      summary: Login user
      tags:
      - Auth
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get auth user
      tags:
      - Auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
