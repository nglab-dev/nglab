definitions:
  dto.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.LoginResponse:
    properties:
      access_token:
        type: string
    type: object
  dto.LoginUser:
    properties:
      email:
        type: string
      nickname:
        type: string
      username:
        type: string
    type: object
  dto.PaginationResult:
    properties:
      items: {}
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
    type: object
  model.Dict:
    properties:
      alias:
        description: 别名
        type: string
      created_at:
        type: string
      id:
        type: integer
      name:
        description: 字典名称
        type: string
      remark:
        description: 备注
        type: string
      sort:
        description: 排序
        type: integer
      type:
        description: 字典类型，1 样本类型 2 实验方法 3 结果单位 4 标本性状 5 禁止打印原因
        type: integer
      updated_at:
        type: string
    type: object
  model.DictType:
    properties:
      created_at:
        type: string
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      updated_at:
        type: string
    type: object
  model.Role:
    properties:
      created_at:
        type: string
      enable:
        type: integer
      id:
        type: integer
      name:
        type: string
      remark:
        type: string
      sort:
        type: integer
      updated_at:
        type: string
    type: object
  model.User:
    properties:
      avatar_url:
        type: string
      created_at:
        type: string
      email:
        type: string
      enabled:
        type: integer
      gender:
        type: integer
      id:
        type: integer
      nickname:
        type: string
      phone:
        type: string
      roles:
        items:
          $ref: '#/definitions/model.Role'
        type: array
      updated_at:
        type: string
      username:
        type: string
    type: object
  response.Response:
    properties:
      code:
        type: integer
      data: {}
      msg:
        type: string
    type: object
info:
  contact: {}
paths:
  /dicts:
    get:
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      - in: query
        name: type
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dto.PaginationResult'
                  - properties:
                      Data:
                        items:
                          $ref: '#/definitions/model.Dict'
                        type: array
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: List Dict
      tags:
      - dicts
  /dicts/types:
    get:
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.DictType'
                  type: array
              type: object
      security:
      - ApiKeyAuth: []
      summary: List Dict Types
      tags:
      - dicts
  /login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginRequest'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.LoginResponse'
              type: object
      summary: Login user
      tags:
      - auth
  /logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                msg:
                  type: string
              type: object
      security:
      - ApiKeyAuth: []
      summary: Logout user
      tags:
      - auth
  /roles:
    get:
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dto.PaginationResult'
                  - properties:
                      Data:
                        items:
                          $ref: '#/definitions/model.Role'
                        type: array
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: List Roles
      tags:
      - roles
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get login user
      tags:
      - users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginUser'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update login user
      tags:
      - users
  /users:
    get:
      consumes:
      - application/json
      parameters:
      - in: query
        name: keyword
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/dto.PaginationResult'
                  - properties:
                      Data:
                        items:
                          $ref: '#/definitions/model.User'
                        type: array
                    type: object
              type: object
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Create user
      tags:
      - users
  /users/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Get user by id
      tags:
      - users
    patch:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "0":
          description: ""
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.User'
              type: object
      security:
      - ApiKeyAuth: []
      summary: Update user
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
